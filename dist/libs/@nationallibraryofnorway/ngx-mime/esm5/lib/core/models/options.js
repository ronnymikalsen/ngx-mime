import { ViewerOptions } from './viewer-options';
import { GestureSettingsMouse, GestureSettingsPen, GestureSettingsTouch, GestureSettingsUnknown } from './gestureSettings';
import { ControlAnchor } from './controlAnchor';
var Options = /** @class */ (function () {
    function Options() {
        this.id = 'openseadragon';
        this.tileSources = [];
        this.tabIndex = 0;
        this.xmlPath = null;
        this.prefixUrl = 'https://openseadragon.github.io/openseadragon/images/';
        this.debugMode = false;
        this.debugGridColor = '#08f';
        this.blendTime = 0;
        this.alwaysBlend = false;
        this.autoHideControls = true;
        this.immediateRender = false;
        this.defaultZoomLevel = 0;
        this.opacity = 1;
        this.compositeOperation = null;
        this.placeholderFillStyle = null;
        this.degrees = 0;
        this.minZoomLevel = this.defaultZoomLevel;
        this.maxZoomLevel = null;
        this.homeFillsViewer = false;
        this.panHorizontal = true;
        this.panVertical = false;
        this.constrainDuringPan = false;
        this.wrapHorizontal = false;
        this.wrapVertical = false;
        this.minZoomImageRatio = 1;
        this.maxZoomPixelRatio = 1;
        this.smoothTileEdgesMinZoom = 1;
        this.iOSDevice = true;
        this.autoResize = true;
        this.preserveImageSizeOnResize = true;
        this.minScrollDeltaTime = 50;
        this.pixelsPerWheelLine = 40;
        this.visibilityRatio = 1;
        this.viewportMargins = {};
        this.imageLoaderLimit = 0;
        this.clickTimeThreshold = 300;
        this.clickDistThreshold = 5;
        this.dblClickTimeThreshold = 300;
        this.dblClickDistThreshold = 20;
        this.springStiffness = 6.5;
        this.animationTime = ViewerOptions.transitions.OSDAnimationTime / 1000;
        this.gestureSettingsMouse = new GestureSettingsMouse();
        this.gestureSettingsTouch = new GestureSettingsTouch();
        this.gestureSettingsPen = new GestureSettingsPen();
        this.gestureSettingsUnknown = new GestureSettingsUnknown();
        this.zoomPerClick = 2.0;
        this.zoomPerScroll = 1.2;
        this.zoomPerSecond = 1.0;
        this.showNavigator = false;
        this.navigatorPosition = 'TOP_RIGHT';
        this.navigatorSizeRatio = 0.2;
        this.navigatorMaintainSizeRatio = false;
        this.navigatorTop = null;
        this.navigatorLeft = null;
        this.navigatorHeight = null;
        this.navigatorWidth = null;
        this.navigatorAutoResize = true;
        this.navigatorAutoFade = true;
        this.navigatorRotate = true;
        this.controlsFadeDelay = 2000;
        this.controlsFadeLength = 1500;
        this.maxImageCacheCount = 200;
        this.timeout = 30000;
        this.useCanvas = true;
        this.minPixelRatio = 0.5;
        this.mouseNavEnabled = true;
        this.showNavigationControl = false;
        this.navigationControlAnchor = ControlAnchor.TOP_LEFT;
        this.showZoomControl = true;
        this.showHomeControl = true;
        this.showFullPageControl = false;
        this.showRotationControl = false;
        this.showSequenceControl = false;
        this.sequenceControlAnchor = ControlAnchor.TOP_LEFT;
        this.navPrevNextWrap = false;
        this.zoomInButton = null;
        this.zoomOutButton = null;
        this.homeButton = null;
        this.previousButton = null;
        this.nextButton = null;
        this.sequenceMode = true;
        this.initialPage = 0;
        this.preserveViewport = false;
        this.preserveOverlays = false;
        this.showReferenceStrip = false;
        this.referenceStripScroll = 'horizontal';
        this.referenceStripElement = null;
        this.referenceStripHeight = null;
        this.referenceStripWidth = null;
        this.referenceStripPosition = 'BOTTOM_LEFT';
        this.referenceStripSizeRatio = 0.2;
        this.collectionMode = false;
        this.collectionRows = 1;
        this.collectionColumns = 0;
        this.collectionLayout = 'horizontal';
        this.collectionTileSize = 800;
        this.collectionTileMargin = 80;
        this.crossOriginPolicy = false;
        this.ajaxWithCredentials = false;
        this.loadTilesWithAjax = false;
        this.ajaxHeaders = null;
    }
    return Options;
}());
export { Options };
//# sourceMappingURL=data:application/json;base64,