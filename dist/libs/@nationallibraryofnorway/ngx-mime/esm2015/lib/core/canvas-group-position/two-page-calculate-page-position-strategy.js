import { ViewerOptions } from '../models/viewer-options';
import { ViewingDirection } from '../models/viewing-direction';
import { canvasRectFromCriteria } from './calculate-canvas-group-position-utils';
export class TwoPageCalculateCanvasGroupPositionStrategy {
    calculateCanvasGroupPosition(criteria, rotation = 0) {
        let x;
        if (!criteria.canvasGroupIndex) {
            // First page
            x = 0;
        }
        else if (criteria.canvasGroupIndex % 2) {
            // Even page numbers
            x =
                criteria.viewingDirection === ViewingDirection.LTR
                    ? this.calculateEvenLtrX(criteria)
                    : this.calculateEvenRtlX(criteria);
        }
        else {
            // Odd page numbers
            x =
                criteria.viewingDirection === ViewingDirection.LTR
                    ? this.calculateOddLtrX(criteria)
                    : this.calculateOddRtlX(criteria);
        }
        return canvasRectFromCriteria(rotation, criteria, x);
    }
    calculateEvenLtrX(criteria) {
        return (criteria.previousCanvasGroupPosition.x +
            criteria.previousCanvasGroupPosition.width +
            ViewerOptions.overlays.canvasGroupMarginInDashboardView);
    }
    calculateOddLtrX(criteria) {
        return (criteria.previousCanvasGroupPosition.x +
            criteria.previousCanvasGroupPosition.width);
    }
    calculateEvenRtlX(criteria) {
        return (criteria.previousCanvasGroupPosition.x -
            criteria.canvasSource.width -
            ViewerOptions.overlays.canvasGroupMarginInDashboardView);
    }
    calculateOddRtlX(criteria) {
        return criteria.previousCanvasGroupPosition.x - criteria.canvasSource.width;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHdvLXBhZ2UtY2FsY3VsYXRlLXBhZ2UtcG9zaXRpb24tc3RyYXRlZ3kuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmF0aW9uYWxsaWJyYXJ5b2Zub3J3YXkvbmd4LW1pbWUvIiwic291cmNlcyI6WyJsaWIvY29yZS9jYW52YXMtZ3JvdXAtcG9zaXRpb24vdHdvLXBhZ2UtY2FsY3VsYXRlLXBhZ2UtcG9zaXRpb24tc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBSy9ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBRWpGLE1BQU0sT0FBTywyQ0FBMkM7SUFFdEQsNEJBQTRCLENBQzFCLFFBQXFDLEVBQ3JDLFdBQW1CLENBQUM7UUFFcEIsSUFBSSxDQUFTLENBQUM7UUFFZCxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFnQixFQUFFO1lBQzlCLGFBQWE7WUFDYixDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ1A7YUFBTSxJQUFJLFFBQVEsQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLEVBQUU7WUFDeEMsb0JBQW9CO1lBQ3BCLENBQUM7Z0JBQ0MsUUFBUSxDQUFDLGdCQUFnQixLQUFLLGdCQUFnQixDQUFDLEdBQUc7b0JBQ2hELENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDO29CQUNsQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3hDO2FBQU07WUFDTCxtQkFBbUI7WUFDbkIsQ0FBQztnQkFDQyxRQUFRLENBQUMsZ0JBQWdCLEtBQUssZ0JBQWdCLENBQUMsR0FBRztvQkFDaEQsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUM7b0JBQ2pDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDdkM7UUFFRCxPQUFPLHNCQUFzQixDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVPLGlCQUFpQixDQUFDLFFBQXFDO1FBQzdELE9BQU8sQ0FDTCxRQUFRLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUN0QyxRQUFRLENBQUMsMkJBQTJCLENBQUMsS0FBSztZQUMxQyxhQUFhLENBQUMsUUFBUSxDQUFDLGdDQUFnQyxDQUN4RCxDQUFDO0lBQ0osQ0FBQztJQUVPLGdCQUFnQixDQUFDLFFBQXFDO1FBQzVELE9BQU8sQ0FDTCxRQUFRLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUN0QyxRQUFRLENBQUMsMkJBQTJCLENBQUMsS0FBSyxDQUMzQyxDQUFDO0lBQ0osQ0FBQztJQUVPLGlCQUFpQixDQUFDLFFBQXFDO1FBQzdELE9BQU8sQ0FDTCxRQUFRLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUN0QyxRQUFRLENBQUMsWUFBWSxDQUFDLEtBQUs7WUFDM0IsYUFBYSxDQUFDLFFBQVEsQ0FBQyxnQ0FBZ0MsQ0FDeEQsQ0FBQztJQUNKLENBQUM7SUFFTyxnQkFBZ0IsQ0FBQyxRQUFxQztRQUM1RCxPQUFPLFFBQVEsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUM7SUFDOUUsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVjdCB9IGZyb20gJy4uL21vZGVscy9yZWN0JztcbmltcG9ydCB7IFZpZXdlck9wdGlvbnMgfSBmcm9tICcuLi9tb2RlbHMvdmlld2VyLW9wdGlvbnMnO1xuaW1wb3J0IHsgVmlld2luZ0RpcmVjdGlvbiB9IGZyb20gJy4uL21vZGVscy92aWV3aW5nLWRpcmVjdGlvbic7XG5pbXBvcnQge1xuICBDYWxjdWxhdGVDYW52YXNHcm91cFBvc2l0aW9uU3RyYXRlZ3ksXG4gIENhbnZhc0dyb3VwUG9zaXRpb25Dcml0ZXJpYVxufSBmcm9tICcuL2NhbGN1bGF0ZS1jYW52YXMtZ3JvdXAtcG9zaXRpb24tc3RyYXRlZ3knO1xuaW1wb3J0IHsgY2FudmFzUmVjdEZyb21Dcml0ZXJpYSB9IGZyb20gJy4vY2FsY3VsYXRlLWNhbnZhcy1ncm91cC1wb3NpdGlvbi11dGlscyc7XG5cbmV4cG9ydCBjbGFzcyBUd29QYWdlQ2FsY3VsYXRlQ2FudmFzR3JvdXBQb3NpdGlvblN0cmF0ZWd5XG4gIGltcGxlbWVudHMgQ2FsY3VsYXRlQ2FudmFzR3JvdXBQb3NpdGlvblN0cmF0ZWd5IHtcbiAgY2FsY3VsYXRlQ2FudmFzR3JvdXBQb3NpdGlvbihcbiAgICBjcml0ZXJpYTogQ2FudmFzR3JvdXBQb3NpdGlvbkNyaXRlcmlhLFxuICAgIHJvdGF0aW9uOiBudW1iZXIgPSAwXG4gICk6IFJlY3Qge1xuICAgIGxldCB4OiBudW1iZXI7XG5cbiAgICBpZiAoIWNyaXRlcmlhLmNhbnZhc0dyb3VwSW5kZXgpIHtcbiAgICAgIC8vIEZpcnN0IHBhZ2VcbiAgICAgIHggPSAwO1xuICAgIH0gZWxzZSBpZiAoY3JpdGVyaWEuY2FudmFzR3JvdXBJbmRleCAlIDIpIHtcbiAgICAgIC8vIEV2ZW4gcGFnZSBudW1iZXJzXG4gICAgICB4ID1cbiAgICAgICAgY3JpdGVyaWEudmlld2luZ0RpcmVjdGlvbiA9PT0gVmlld2luZ0RpcmVjdGlvbi5MVFJcbiAgICAgICAgICA/IHRoaXMuY2FsY3VsYXRlRXZlbkx0clgoY3JpdGVyaWEpXG4gICAgICAgICAgOiB0aGlzLmNhbGN1bGF0ZUV2ZW5SdGxYKGNyaXRlcmlhKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gT2RkIHBhZ2UgbnVtYmVyc1xuICAgICAgeCA9XG4gICAgICAgIGNyaXRlcmlhLnZpZXdpbmdEaXJlY3Rpb24gPT09IFZpZXdpbmdEaXJlY3Rpb24uTFRSXG4gICAgICAgICAgPyB0aGlzLmNhbGN1bGF0ZU9kZEx0clgoY3JpdGVyaWEpXG4gICAgICAgICAgOiB0aGlzLmNhbGN1bGF0ZU9kZFJ0bFgoY3JpdGVyaWEpO1xuICAgIH1cblxuICAgIHJldHVybiBjYW52YXNSZWN0RnJvbUNyaXRlcmlhKHJvdGF0aW9uLCBjcml0ZXJpYSwgeCk7XG4gIH1cblxuICBwcml2YXRlIGNhbGN1bGF0ZUV2ZW5MdHJYKGNyaXRlcmlhOiBDYW52YXNHcm91cFBvc2l0aW9uQ3JpdGVyaWEpIHtcbiAgICByZXR1cm4gKFxuICAgICAgY3JpdGVyaWEucHJldmlvdXNDYW52YXNHcm91cFBvc2l0aW9uLnggK1xuICAgICAgY3JpdGVyaWEucHJldmlvdXNDYW52YXNHcm91cFBvc2l0aW9uLndpZHRoICtcbiAgICAgIFZpZXdlck9wdGlvbnMub3ZlcmxheXMuY2FudmFzR3JvdXBNYXJnaW5JbkRhc2hib2FyZFZpZXdcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBjYWxjdWxhdGVPZGRMdHJYKGNyaXRlcmlhOiBDYW52YXNHcm91cFBvc2l0aW9uQ3JpdGVyaWEpIHtcbiAgICByZXR1cm4gKFxuICAgICAgY3JpdGVyaWEucHJldmlvdXNDYW52YXNHcm91cFBvc2l0aW9uLnggK1xuICAgICAgY3JpdGVyaWEucHJldmlvdXNDYW52YXNHcm91cFBvc2l0aW9uLndpZHRoXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgY2FsY3VsYXRlRXZlblJ0bFgoY3JpdGVyaWE6IENhbnZhc0dyb3VwUG9zaXRpb25Dcml0ZXJpYSkge1xuICAgIHJldHVybiAoXG4gICAgICBjcml0ZXJpYS5wcmV2aW91c0NhbnZhc0dyb3VwUG9zaXRpb24ueCAtXG4gICAgICBjcml0ZXJpYS5jYW52YXNTb3VyY2Uud2lkdGggLVxuICAgICAgVmlld2VyT3B0aW9ucy5vdmVybGF5cy5jYW52YXNHcm91cE1hcmdpbkluRGFzaGJvYXJkVmlld1xuICAgICk7XG4gIH1cblxuICBwcml2YXRlIGNhbGN1bGF0ZU9kZFJ0bFgoY3JpdGVyaWE6IENhbnZhc0dyb3VwUG9zaXRpb25Dcml0ZXJpYSkge1xuICAgIHJldHVybiBjcml0ZXJpYS5wcmV2aW91c0NhbnZhc0dyb3VwUG9zaXRpb24ueCAtIGNyaXRlcmlhLmNhbnZhc1NvdXJjZS53aWR0aDtcbiAgfVxufVxuIl19