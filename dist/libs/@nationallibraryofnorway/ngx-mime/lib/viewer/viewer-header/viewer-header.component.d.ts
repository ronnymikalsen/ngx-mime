import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { AltoService } from '../../core/alto-service/alto.service';
import { MimeDomHelper } from '../../core/mime-dom-helper';
import { ViewerLayout } from '../../core/models/viewer-layout';
import { ViewerLayoutService } from '../../core/viewer-layout-service/viewer-layout-service';
import { HelpDialogService } from '../../help-dialog/help-dialog.service';
import { ContentSearchDialogService } from './../../content-search-dialog/content-search-dialog.service';
import { ContentsDialogService } from './../../contents-dialog/contents-dialog.service';
import { FullscreenService } from './../../core/fullscreen-service/fullscreen.service';
import { IiifManifestService } from './../../core/iiif-manifest-service/iiif-manifest-service';
import { MimeViewerIntl } from './../../core/intl/viewer-intl';
import { Manifest } from './../../core/models/manifest';
import * as i0 from "@angular/core";
export declare class ViewerHeaderComponent implements OnInit, OnDestroy {
    intl: MimeViewerIntl;
    private changeDetectorRef;
    private contentsDialogService;
    private contentSearchDialogService;
    private helpDialogService;
    private iiifManifestService;
    private fullscreenService;
    private mimeDomHelper;
    private viewerLayoutService;
    private altoService;
    mimeHeaderBefore: ViewContainerRef;
    mimeHeaderAfter: ViewContainerRef;
    manifest: Manifest | null;
    state: string;
    isContentSearchEnabled: boolean;
    isFullscreenEnabled: boolean;
    isInFullscreen: boolean;
    fullscreenLabel: string;
    isPagedManifest: boolean;
    hasRecognizedTextContent: boolean;
    viewerLayout: ViewerLayout;
    ViewerLayout: typeof ViewerLayout;
    private subscriptions;
    constructor(intl: MimeViewerIntl, changeDetectorRef: ChangeDetectorRef, contentsDialogService: ContentsDialogService, contentSearchDialogService: ContentSearchDialogService, helpDialogService: HelpDialogService, iiifManifestService: IiifManifestService, fullscreenService: FullscreenService, mimeDomHelper: MimeDomHelper, viewerLayoutService: ViewerLayoutService, altoService: AltoService, el: ElementRef);
    get headerState(): string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    toggleRecognizedTextContent(): void;
    toggleContents(): void;
    toggleSearch(): void;
    toggleHelp(): void;
    toggleFullscreen(): void;
    isInFullScreen(): boolean;
    toggleViewerLayout(): void;
    setLayoutOnePage(): void;
    setLayoutTwoPage(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ViewerHeaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ViewerHeaderComponent, "mime-viewer-header", never, {}, {}, never, never>;
}
